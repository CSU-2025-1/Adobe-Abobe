version: '3.8'

services:
  rabbit:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build: ./api_gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    env_file:
      - ./api_gateway/.env
    depends_on:
      rabbit:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"


#  postgres:
#    image: postgres:17
#    environment:
#      POSTGRES_DB: authservicedb
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 123
#    ports:
#      - "5433:5432"
#    depends_on:
#      rabbit:
#        condition: service_healthy
#    volumes:
#      - postgres_data:/var/lib/postgresql/data

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data

#  auth-service:
#    build: ./auth_service
#    ports:
#      - "50001:50001"
#    env_file:
#      - ./auth_service/.env
#    depends_on:
#      rabbit:
#        condition: service_healthy
#      redis:
#        condition: service_started
#      minio:
#        condition: service_started
#      postgres:
#        condition: service_started

  upload-service:
    build: ./upload_service
    ports:
      - "50051:50051"
    env_file:
      - ./upload_service/.env
    depends_on:
      rabbit:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started

#  filter-service:
#    build: ./filter_service
#    env_file:
#      - ./filter_service/.env
#    depends_on:
#      rabbit:
#        condition: service_healthy
#      redis:
#        condition: service_started
#      minio:
#        condition: service_started

volumes:
  postgres_data:
  minio-data: